c
exit
c
c
print *ebx
print *0x10000
c
exit
c
c
c
c
exit
c
c
c
print magic
print *magic
reg info 
i r eax
i r ebx
print *0xc0010000
print original_ebx 
print /x original_ebx 
print *original_ebx 
print &original_ebx 
print &original_eax 
exit
c
c
si
si
si
break higher_half
c
print (short int) original_eax 
print (short int) &original_eax
print &original_eax
si
si
si
print &original_ebx 
print original_ebx 
print short int original_ebx
print (short int) original_ebx
print (short int) *original_ebx
print (short int)&original_ebx
print (short int)*original_ebx
print (short int)original_ebx
exit
c
break higher_half
c
info registers
exit
break higher_half
c
c
c
p magic
p *magic
p &magic
p /x magic
p boot_info 
p *boot_info 
exit
break *oxc0104494
break *0xc0104494
c
c
c
si
break init_pfa 
c
c
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
break pfa.h:68
c
n
n
n
n
exit
break pfa.h
break pfa.h:75
c
c
c
step into
next
exit
break pfa.h:75
c
c
c
s
s
s
s
exit
break pfa.h:78
c
c
c
s
finish
n
n
n
n
n
n
n
n
n
n
n
break pfa_alloc 
c
c
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
l
l
list .
l .
n
rq
c
break main.c:81
n
c
s
n
n
n
n
n
n
info locals 
n
info locals 
n
i locals
n
s
i locals
s
i locals
s
s
s
s
n
finish
rq
c
break main.c:81
c
sc
s
s
n
n
n
i locals
n
p bitmap_size 
n
info locals
print pfa_bitmap[byte]
n
n
n
print pfa_bitmap[byte] & test_bit
print pfa_bitmap[byte]
print test_bit
p !(pfa_bitmap[byte] & test_bit)
s
info locals
s
info locals
s
exit
break main.c:81
c
c
c
s
n
n
n
s
rq
break main.c:81
c
c
s
s
n
n
n
n
n
n
n
info locals
p pfa_bitmap[byte] & test_bit
n
info locals
p pfa_bitmap[byte]
i locals
p (byte * BITS_PER_BYTE) + bit
p (byte * 8) + bit
info locals
c

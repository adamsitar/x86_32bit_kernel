#pragma once

// Lookup table for unshifted scancodes (lowercase/symbols)
static const char unshifted_table[128] = {
    0,    27,  '1', '2',  '3',  '4', '5',  '6',
    '7',  '8', '9', '0',  '-',  '=', '\b',
    '\t', // 0x00-0x0F (Esc, numbers, etc.)
    'q',  'w', 'e', 'r',  't',  'y', 'u',  'i',
    'o',  'p', '[', ']',  '\n', 0,   'a',
    's', // 0x10-0x1F (q-a, Enter, Ctrl)
    'd',  'f', 'g', 'h',  'j',  'k', 'l',  ';',
    '\'', '`', 0,   '\\', 'z',  'x', 'c',
    'v', // 0x20-0x2F (d-v, Shift, etc.)
    'b',  'n', 'm', ',',  '.',  '/', 0,    '*',
    0,    ' ', 0,   0,    0,    0,   0,
    0, // 0x30-0x3F (b-/, Space, Caps Lock,F1-F5)
    0,    0,   0,   0,    0,    0,   0,    '7',
    '8',  '9', '-', '4',  '5',  '6', '+',
    '1', // 0x40-0x4F (F6-F12, numpad)
    '2',  '3', '0', '.',  0,    0,   0,    0,
    0,    0,   0,   0,    0,    0,   0,
    0, // 0x50-0x5F (numpad, etc.)
    0,    0,   0,   0,    0,    0,   0,    0,
    0,    0,   0,   0,    0,    0,   0,
    0, // 0x60-0x6F (unused/reserved)
    0,    0,   0,   0,    0,    0,   0,    0,
    0,    0,   0,   0,    0,    0,   0,    0 // 0x70-0x7F (unused)

};

// Lookup table for shifted scancodes (uppercase/symbols)
static const char shifted_table[128] = {
    0,   27,  '!', '@', '#',  '$', '%',  '^',
    '&', '*', '(', ')', '_',  '+', '\b', '\t', // 0x00-0x0F
    'Q', 'W', 'E', 'R', 'T',  'Y', 'U',  'I',
    'O', 'P', '{', '}', '\n', 0,   'A',  'S', // 0x10-0x1F
    'D', 'F', 'G', 'H', 'J',  'K', 'L',  ':',
    '"', '~', 0,   '|', 'Z',  'X', 'C',  'V', // 0x20-0x2F
    'B', 'N', 'M', '<', '>',  '?', 0,    '*',
    0,   ' ', 0,   0,   0,    0,   0,    0, // 0x30-0x3F
    0,   0,   0,   0,   0,    0,   0,    '7',
    '8', '9', '-', '4', '5',  '6', '+',  '1', // 0x40-0x4F
    '2', '3', '0', '.', 0,    0,   0,    0,
    0,   0,   0,   0,   0,    0,   0,    0, // 0x50-0x5F
    0,   0,   0,   0,   0,    0,   0,    0,
    0,   0,   0,   0,   0,    0,   0,    0, // 0x60-0x6F
    0,   0,   0,   0,   0,    0,   0,    0,
    0,   0,   0,   0,   0,    0,   0,    0 // 0x70-0x7F
};
